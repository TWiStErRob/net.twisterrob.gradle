name: CI # Check Gradle and AGP combinations
on:
  push
concurrency:
  # Documentation suggests ${{ github.head_ref }}, but that's only available on pull_request/pull_request_target triggers.
  group: ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    name: 1 🔨 Build
    runs-on: ubuntu-latest
    # A run took 5.5 minutes, give it a bit of a buffer and constrain.
    timeout-minutes: 10
    steps:
      - name: Set up JDK 1.8.
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Android SDK.
        uses: android-actions/setup-android@v2

      - name: Checkout ${{ github.ref }} branch in ${{ github.repository }} repository.
        uses: actions/checkout@v2

      # Check publicly available release version first, this should be independent of repository state.
      - name: Verify docs/examples/release.
        working-directory: docs/examples/release
        if: success() || failure()
        run: ./gradlew --no-daemon --no-build-cache --stacktrace assemble check

      - name: Build Gradle Quality plugins.
        run: ./gradlew --no-daemon --no-build-cache --stacktrace jar

      - name: Cancel other jobs on Build failure, no need to check / test it.
        if: failure()
        uses: andymckay/cancel-action@0.2

      - name: Publish Gradle Quality plugins to mavenLocal().
        run: ./gradlew --no-daemon --no-build-cache --stacktrace publishToMavenLocal

      - name: Upload JARs, Maven and Gradle metadata.
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: Intermediate Artifacts
          path: |
            ${{ github.workspace }}/**/build/libs/*.jar
            ${{ github.workspace }}/**/build/publications/release/module.json
            ${{ github.workspace }}/**/build/publications/release/pom-default.xml

      - name: Upload mavenLocal() artifacts.
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: mavenLocal
          path: |
            ~/.m2/repository/**

      - name: Parse env.PROJECT_VERSION.
        run: echo "PROJECT_VERSION=$(grep --color=never --perl-regexp --only-matching '(?<=^projectVersion=)(.*)$' gradle.properties)" | tee --append $GITHUB_ENV

      - name: Calculate env.SNAPSHOT_VERSION for branches.
        # ${{ github.event.pull_request.number }} is not available for push.
        if: endsWith(env.PROJECT_VERSION, '-SNAPSHOT') && github.ref != 'refs/heads/master'
        run: echo "SNAPSHOT_VERSION=$(echo $PROJECT_VERSION | sed -re "s/^(.*)(-SNAPSHOT)$/\1.$(echo ${{ github.ref }} | sed -re 's/^refs\/heads\///')\2/")" | tee --append $GITHUB_ENV

      - name: Calculate env.SNAPSHOT_VERSION for master.
        if: endsWith(env.PROJECT_VERSION, '-SNAPSHOT') && github.ref == 'refs/heads/master'
        run: echo "SNAPSHOT_VERSION=$(echo $PROJECT_VERSION)" | tee --append $GITHUB_ENV

      - name: Verify docs/examples/local for release.
        working-directory: docs/examples/local
        if: env.SNAPSHOT_VERSION == ''
        run: |
          sed -i.bak -re 's/version "${{ env.PROJECT_VERSION }}-SNAPSHOT"/version "${{ env.PROJECT_VERSION }}"/g' build.gradle.kts
          ./gradlew --no-daemon --no-build-cache --stacktrace assemble check

      - name: Verify docs/examples/local for snapshot.
        working-directory: docs/examples/local
        if: env.SNAPSHOT_VERSION != ''
        run: ./gradlew --no-daemon --no-build-cache --stacktrace assemble check

      - name: Publish Gradle Quality plugins to Sonatype Snapshot.
        if: env.SNAPSHOT_VERSION != ''
        run: >
          ./gradlew
          --no-daemon
          --no-build-cache
          --stacktrace
          publishReleasePublicationToSonatypeRepository
          -PsonatypeUsername=${{ secrets.SONATYPE_USERNAME }}
          -PsonatypePassword=${{ secrets.SONATYPE_PASSWORD }}
          -PprojectVersion=${{ env.SNAPSHOT_VERSION }}

      - name: Verify docs/examples/snapshot.
        working-directory: docs/examples/snapshot
        if: env.SNAPSHOT_VERSION != ''
        run: |
          sed -i.bak -re 's/version "${{ env.PROJECT_VERSION }}"/version "${{ env.SNAPSHOT_VERSION }}"/g' build.gradle.kts
          ./gradlew --no-daemon --no-build-cache --stacktrace assemble check

  check:
    # Cannot access ${{ env.JOB_NAME }}, so need to duplicate.
    name: 2 🛠️ AGP ${{ matrix.agp }} on Gradle ${{ matrix.gradle }}
    runs-on: ubuntu-latest
    env:
      # Cannot access ${{ job.name }} so create own.
      JOB_NAME: AGP ${{ matrix.agp }} on Gradle ${{ matrix.gradle }}
      # Capture which Gradle version is running the build to use in some steps.
      # Value will be written in a later step using `>> $GITHUB_ENV`.
      GRADLE_VERSION: 0.0.0
    # Average observed execution time is 6-7 minutes, double it for timeout constraint.
    timeout-minutes: 15

    steps:
      - run: echo "Running in response to a ${{ github.event_name }} event, building ${{ github.event.compare }} changes."

      - name: Set up JDK 1.8.
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Android SDK.
        uses: android-actions/setup-android@v2
        #with: # Not actually supported properties "licenses" and "components", here for history from travis.yml.
        #  licenses:
        #    - android-sdk-license-.+
        #  components:
        #    - tools
        #    - platform-tools
        #    # AGP's com.android.SdkConstants.CURRENT_BUILD_TOOLS_VERSION
        #    - build-tools-${{ matrix.build-tools }}
        #    # InstantAppExtension overrides compileSdkVersion, see android-all_kinds/build.gradle
        #    - android-${{ matrix.instant-api }}
        #    # compileSdkVersion for almost all tests, may need an extra `yes | sdkmanager "platforms;android-30"` step.
        #    - android-30

      - name: Checkout ${{ github.ref }} branch in ${{ github.repository }} repository.
        uses: actions/checkout@v2

      # To prevent "Welcome to Gradle <version>! Here are the highlights of this release:" in build log, use:
      #- run: touch ~/.gradle/notifications/5.6.4/release-features.rendered

      - name: Download Gradle running the build.
        run: |
          # Run a no-op gradlew command in workspace.
          ./gradlew --no-daemon --version | tee gradle.version.log
          # Capture version for later usage.
          # Note: the $ is very important no prevent matching the "Welcome to Gradle x.y.z!" line.
          grep --color=never --only-matching --perl-regexp '(?<=Gradle )(\d+\.\d+(?:\.\d+)?)$' gradle.version.log > gradle.version
          echo "GRADLE_VERSION=$(<gradle.version)" | tee --append $GITHUB_ENV

      - name: Download Gradle ${{ matrix.gradle }} running the tests.
        run: |
          # Create an empty project with wrapper using ${{ matrix.gradle }}.
          mkdir ~/gradle-${{ matrix.gradle }}
          cd ~/gradle-${{ matrix.gradle }}
          touch settings.gradle
          ${{ github.workspace }}/gradlew wrapper --gradle-version ${{ matrix.gradle }} --distribution-type all --quiet
          # Run a no-op gradlew command in an empty project with a specific wrapper version.
          ./gradlew --no-daemon --version

      - name: Cache Gradle ${{ env.GRADLE_VERSION }} files.
        uses: actions/cache@v2
        with:
          path: |
            # Prevent "Downloading https://services.gradle.org/distributions/gradle-${{ env.GRADLE_VERSION }}-all.zip"
            # Prevent "Unzipping /home/${{ env.USER }}/.gradle/wrapper/dists/gradle-${{ env.GRADLE_VERSION }}-all/${ gradle-dist-hash }/gradle-${{ env.GRADLE_VERSION }}-all.zip"
            # No need to cache this, as it's cached by default, it takes 4-11 seconds only to do it fresh.
            #~/.gradle/wrapper/dists/gradle-${{ env.GRADLE_VERSION }}-all/

            # Prevent "Download https://repo1.maven.org/maven2/" during build
            ~/.gradle/caches/modules-2/

            # Prevent "Generating JAR file 'gradle-api-${{ env.GRADLE_VERSION }}.jar'" during build
            ~/.gradle/caches/${{ env.GRADLE_VERSION }}/generated-gradle-jars/
          key: ${{ runner.os }}-gradle-${{ env.GRADLE_VERSION }}-${{ hashFiles('**/gradle-wrapper.properties', '**/*.gradle*', 'buildSrc/src/**') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ env.GRADLE_VERSION }}-

      - name: Cache Gradle Test Kit ${{ matrix.gradle }} files.
        uses: actions/cache@v2
        with:
          path: |
            # Prevent "Downloading https://services.gradle.org/distributions/gradle-${{ matrix.gradle }}-all.zip"
            # Prevent "Unzipping /home/${{ env.USER }}/.gradle/wrapper/dists/gradle-${{ matrix.gradle }}-all/${ gradle-dist-hash }/gradle-${{ matrix.gradle }}-all.zip"
            # No need to cache this, as it's cached by default, it takes 4-11 seconds only to do it fresh.
            #~/.gradle/wrapper/dists/gradle-${{ matrix.gradle }}-all/

            # Prevent "Download https://repo1.maven.org/maven2/" during test runs
            /tmp/.gradle-test-kit-${{ env.USER }}/caches/modules-2/

            # Prevent "Generating JAR file 'gradle-api-${{ matrix.gradle }}.jar'" during test runs
            /tmp/.gradle-test-kit-${{ env.USER }}/caches/${{ matrix.gradle }}/generated-gradle-jars/
          key: ${{ runner.os }}-gradle-test-kit-${{ matrix.gradle }}-${{ matrix.agp }}

      - name: Check ${{ env.JOB_NAME }}.
        # To run specific test, replace `check tests` with `:quality:test --tests '*.HtmlReportTaskTest.runs on lints'`
        run: >
          ./gradlew
          --no-daemon
          --no-build-cache
          --stacktrace
          check tests
          -Pnet.twisterrob.gradle.build.verboseReports=true
          -Pnet.twisterrob.test.android.pluginVersion=${{ matrix.agp }}
          -Pnet.twisterrob.gradle.runner.gradleVersion=${{ matrix.gradle }}

      - name: Upload "${{ env.JOB_NAME }} Test Results XMLs".
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.JOB_NAME }} Test Results XMLs
          path: ${{ github.workspace }}/**/build/test-results/test/TEST-*.xml

      - name: Upload "${{ env.JOB_NAME }} Test Results HTML".
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.JOB_NAME }} Test Results HTML
          path: ${{ github.workspace }}/build/reports/tests/all/

      - name: Upload "${{ env.JOB_NAME }} Test Results HTMLs".
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.JOB_NAME }} Test Results HTMLs
          path: ${{ github.workspace }}/**/build/reports/tests/test/

      - name: Cleanup Gradle files before caching.
        run: |
          # Don't cache lock files to prevent breaking future builds
          rm -f  ~/.gradle/caches/modules-2/modules-2.lock
          rm -f  ~/.gradle/caches/modules-2/gc.properties
          rm -fr ~/.gradle/caches/*/plugin-resolution/

      - name: Cleanup Gradle Test Kit files before caching.
        run: |
          # Don't cache lock files to prevent breaking future builds
          rm -f  /tmp/.gradle-test-kit-${{ env.USER }}/caches/modules-2/modules-2.lock
          rm -f  /tmp/.gradle-test-kit-${{ env.USER }}/caches/modules-2/gc.properties
          rm -fr /tmp/.gradle-test-kit-${{ env.USER }}/caches/*/plugin-resolution/

    strategy:
      fail-fast: false
      matrix:
        # See https://developer.android.com/studio/releases/gradle-plugin#updating-gradle.
        #gradle: []
        # See https://developer.android.com/studio/releases/gradle-plugin.
        #agp: []
        # See https://developer.android.com/studio/releases/build-tools#notes.
        #build-tools: []
        # See android-all_kinds/build.gradle for more info.
        #instant-api: []
        include:
          # Disabled, fails too many tests, see https://github.com/TWiStErRob/net.twisterrob.gradle/issues/111.
          #- name: "Android Gradle Plugin 3.0.x, Gradle 4.1+"
          #  gradle: 4.2.1
          #  agp: 3.0.1
          #  build-tools: 26.0.3
          #  instant-api: 26
          - name: "Android Gradle Plugin 3.1.x, Gradle 4.4+"
            gradle: 4.9
            agp: 3.1.4
            build-tools: 27.0.3
            instant-api: 26
          - name: "Android Gradle Plugin 3.2.x, Gradle 4.6+"
            gradle: 4.9
            agp: 3.2.1
            build-tools: 28.0.3
            instant-api: 27
          - name: "Android Gradle Plugin 3.3.x, Gradle 4.10.1+"
            gradle: 4.10.3
            agp: 3.3.3
            build-tools: 28.0.3
            instant-api: 27
          - name: "Android Gradle Plugin 3.3.x, Gradle 5.x"
            gradle: 5.4.1
            agp: 3.3.3
            build-tools: 28.0.3
            instant-api: 27
          - name: "Android Gradle Plugin 3.4.x, Gradle 5.1.1+"
            gradle: 5.6.4
            agp: 3.4.3
            build-tools: 28.0.3
            instant-api: 28
          - name: "Android Gradle Plugin 3.5.x, Gradle 5.4.1-5.6.4"
            gradle: 5.6.4
            agp: 3.5.4
            build-tools: 28.0.3
            instant-api: 28
          - name: "Android Gradle Plugin 3.5.x, Gradle 6.x"
            gradle: 6.7.1
            agp: 3.5.4
            build-tools: 28.0.3
            instant-api: 28
          - name: "Android Gradle Plugin 3.6.x, Gradle 5.6.4+"
            gradle: 5.6.4
            agp: 3.6.4
            build-tools: 28.0.3
            instant-api: 28
          - name: "Android Gradle Plugin 3.6.x, Gradle 6.x"
            gradle: 6.7.1
            agp: 3.6.4
            build-tools: 28.0.3
            instant-api: 28
          - name: "Android Gradle Plugin 4.0.x, Gradle 6.1.1+"
            gradle: 6.1.1
            agp: 4.0.2
            build-tools: 29.0.2
            instant-api: 29
          - name: "Android Gradle Plugin 4.0.x, Gradle 6.x"
            gradle: 6.7.1
            agp: 4.0.2
            build-tools: 29.0.2
            instant-api: 29
          - name: "Android Gradle Plugin 4.1.x, Gradle 6.5+"
            gradle: 6.5.1
            agp: 4.1.3
            build-tools: 29.0.2
            instant-api: 29
          - name: "Android Gradle Plugin 4.1.x, Gradle 6.x"
            gradle: 6.7.1
            agp: 4.1.3
            build-tools: 29.0.2
            instant-api: 29
          - name: "Android Gradle Plugin 4.2.x, Gradle 6.7.1+"
            gradle: 6.7.1
            agp: 4.2.1
            build-tools: 30.0.2
            instant-api: 30
          - name: "Android Gradle Plugin 4.2.x, Gradle 6.x"
            gradle: 6.9
            agp: 4.2.1
            build-tools: 30.0.2
            instant-api: 30

  # Separate job for parsing the XML output, since the matrix runs on multiple machines.
  publish-test-results:
    name: 3 📢 Publish Tests Results
    runs-on: ubuntu-latest
    needs: check
    # The dependency job might be skipped, we don't need to run this job then.
    if: success() || failure()
    # Should finish under 2 minutes on success, so give it a big buffer in case failures take more time.
    timeout-minutes: 5

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      #- name: Display structure of downloaded files
      #  run: ls -R
      #  working-directory: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          check_name: 0 🔔 Test Results
          comment_title: Test Results
          report_individual_runs: true
          test_changes_limit: 0
          files: artifacts/* Test Results XMLs/**/*.xml
