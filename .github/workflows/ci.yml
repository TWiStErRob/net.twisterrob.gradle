name: CI # Check Gradle and AGP combinations
on: [ push ]
#  push:
#    branches: [ $default-branch ]
#  pull_request:
#    branches: [ $default-branch ]
jobs:
  check:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    env:
      # see https://developer.android.com/studio/releases/gradle-plugin#updating-gradle
      TEST_GRADLE_VERSION: ${{ matrix.gradle }}
      ANDROID_PLUGIN_VERSION: ${{ matrix.agp }}
      ANDROID_BUILD_TOOLS_VERSION: ${{ matrix.build-tools }}
      # see android-all_kinds/build.gradle for more info
      ANDROID_INSTANT_API_LEVEL: ${{ matrix.instant-api }}

    steps:
      - run: echo "Running in response to a ${{ github.event_name }} event."

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
#        with: # Not actually supported properties "licenses" and "components", here for history from travis.yml.
#          licenses:
#            - android-sdk-license-.+
#          components:
#            - tools
#            - platform-tools
#            # AGP's com.android.SdkConstants.CURRENT_BUILD_TOOLS_VERSION
#            - build-tools-${{ matrix.build-tools }}
#            # InstantAppExtension overrides compileSdkVersion, see android-all_kinds/build.gradle
#            - android-${{ matrix.instant-api }}
#            # compileSdkVersion for almost all tests, may need an extra `yes | sdkmanager "platforms;android-30"` step.
#            - android-30

      - name: Check out ${{ github.ref }} branch in ${{ github.repository }} repository
        uses: actions/checkout@v2

      - name: Download Gradle 5.6.4 running the build.
        run: |
          touch ~/.gradle/notifications/5.6.4/release-features.rendered
          chmod +x gradlew
          ./gradlew --no-daemon --no-build-cache --version

      - name: Download Gradle ${{ matrix.gradle }} running the tests.
        run: |
          # Prevent "Welcome to Gradle ${{ matrix.gradle }}! Here are the highlights of this release:" in build log
          touch ~/.gradle/notifications/${{ matrix.gradle }}/release-features.rendered
          # Create an empty project with wrapper using ${{ matrix.gradle }}.
          mkdir ~/gradle-${{ matrix.gradle }}
          cd ~/gradle-${{ matrix.gradle }}
          touch settings.gradle
          ${{ github.workspace }}/gradlew wrapper --gradle-version ${{ matrix.gradle }} --distribution-type all --quiet
          # Run empty project.
          ./gradlew --no-daemon --no-build-cache --version

      - name: Check Android Gradle Plugin ${{ matrix.agp }} on Gradle ${{ matrix.gradle }}
        # To run specific test, replace `check tests` with `:quality:test --tests '*.HtmlReportTaskTest.runs on lints'`
        run: >
          ./gradlew
          --no-daemon
          --no-build-cache
          --stacktrace
          check tests
          -PverboseReports
          -Pnet.twisterrob.test.android.pluginVersion=$ANDROID_PLUGIN_VERSION
          -Pnet.twisterrob.gradle.runner.gradleVersion=$TEST_GRADLE_VERSION

      - name: Upload Unit Test Results XMLs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: AGP ${{ matrix.agp }} on Gradle ${{ matrix.gradle }} Test Results XMLs
          path: ${{ github.workspace }}/**/build/test-results/test/TEST-*.xml

      - name: Upload Unit Test Results HTML
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: AGP ${{ matrix.agp }} on Gradle ${{ matrix.gradle }} Test Results HTML
          path: ${{ github.workspace }}/build/reports/tests/all/

      - name: Upload Unit Test Results HTMLs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: AGP ${{ matrix.agp }} on Gradle ${{ matrix.gradle }} Test Results HTMLs
          path: ${{ github.workspace }}/**/build/reports/tests/test/

      - name: Upload JARs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: AGP ${{ matrix.agp }} on Gradle ${{ matrix.gradle }} JARs
          path: ${{ github.workspace }}/**/build/libs/*.jar

    strategy:
      matrix:
        #gradle: []
        #agp: []
        #build-tools: []
        #instant-api: []
        include:
#           - name: "Android Gradle Plugin 3.0.x, Gradle 4.1+"
#             gradle: 4.2.1
#             agp: 3.0.1
#             build-tools: 26.0.3
#             instant-api: 26
#           - name: "Android Gradle Plugin 3.1.x, Gradle 4.4+"
#             gradle: 4.9
#             agp: 3.1.4
#             build-tools: 27.0.3
#             instant-api: 26
#           - name: "Android Gradle Plugin 3.1.x, Gradle 4.4+"
#             gradle: 4.9
#             agp: 3.1.4
#             build-tools: 27.0.3
#             instant-api: 26
#           - name: "Android Gradle Plugin 3.2.x, Gradle 4.6+"
#             gradle: 4.9
#             agp: 3.2.1
#             build-tools: 28.0.3
#             instant-api: 27
#           - name: "Android Gradle Plugin 3.3.x, Gradle 4.10.1+"
#             gradle: 4.10.3
#             agp: 3.3.3
#             build-tools: 28.0.3
#             instant-api: 27
#           - name: "Android Gradle Plugin 3.3.x, Gradle 5.x"
#             gradle: 5.4.1
#             agp: 3.3.3
#             build-tools: 28.0.3
#             instant-api: 27
#           - name: "Android Gradle Plugin 3.4.x, Gradle 5.1.1+"
#             gradle: 5.6.4
#             agp: 3.4.3
#             build-tools: 28.0.3
#             instant-api: 28
#           - name: "Android Gradle Plugin 3.5.x, Gradle 5.4.1-5.6.4"
#             gradle: 5.6.4
#             agp: 3.5.4
#             build-tools: 28.0.3
#             instant-api: 28
#           - name: "Android Gradle Plugin 3.5.x, Gradle 6.x"
#             gradle: 6.7.1
#             agp: 3.5.4
#             build-tools: 28.0.3
#             instant-api: 28
#           - name: "Android Gradle Plugin 3.6.x, Gradle 5.6.4+"
#             gradle: 5.6.4
#             agp: 3.6.4
#             build-tools: 28.0.3
#             instant-api: 28
#           - name: "Android Gradle Plugin 3.6.x, Gradle 6.x"
#             gradle: 6.7.1
#             agp: 3.6.4
#             build-tools: 28.0.3
#             instant-api: 28
#           - name: "Android Gradle Plugin 4.0.x, Gradle 6.1.1+"
#             gradle: 6.1.1
#             agp: 4.0.2
#             build-tools: 29.0.2
#             instant-api: 29
#           - name: "Android Gradle Plugin 4.0.x, Gradle 6.x"
#             gradle: 6.7.1
#             agp: 4.0.2
#             build-tools: 29.0.2
#             instant-api: 29
#           - name: "Android Gradle Plugin 4.1.x, Gradle 6.5+"
#             gradle: 6.5.1
#             agp: 4.1.3
#             build-tools: 29.0.2
#             instant-api: 29
#           - name: "Android Gradle Plugin 4.1.x, Gradle 6.x"
#             gradle: 6.7.1
#             agp: 4.1.3
#             build-tools: 29.0.2
#             instant-api: 29
          - name: "Android Gradle Plugin 4.2.x, Gradle 6.7.1+"
            gradle: 6.7.1
            agp: 4.2.0
            build-tools: 30.0.2
            instant-api: 30
          - name: "Android Gradle Plugin 4.2.x, Gradle 6.x"
            gradle: 6.9
            agp: 4.2.0
            build-tools: 30.0.2
            instant-api: 30

  # Separate job for parsing the XML output, since the matrix runs on multiple machines.
  publish-test-results:
    name: "Publish Unit Tests Results"
    runs-on: ubuntu-latest
    needs: check
    # The dependency job might be skipped, we don't need to run this job then.
    if: success() || failure()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/* Test Results XMLs/**/*.xml
