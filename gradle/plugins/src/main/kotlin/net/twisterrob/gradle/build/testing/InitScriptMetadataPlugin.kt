package net.twisterrob.gradle.build.testing

import org.gradle.api.Plugin
import org.gradle.api.Project
import org.gradle.api.tasks.PathSensitivity
import org.gradle.api.tasks.testing.Test
import org.gradle.kotlin.dsl.named
import org.gradle.kotlin.dsl.register

class InitScriptMetadataPlugin : Plugin<Project> {

	override fun apply(project: Project) {
		val initScriptConfiguration = project.configurations
			.register(DEFAULT_CONFIGURATION_NAME) {
				isCanBeConsumed = false
				isCanBeResolved = true
				dependencies.add(project.dependencyFactory.create(project.project(":test:internal:runtime")))
			}

		val initScriptTestMetadata = project.tasks
			.register<InitScriptTestMetadata>("initScriptTestMetadata") {
				initScriptClasspath.from(initScriptConfiguration)
			}

		project.tasks.named<Test>("test").configure {
			// Add reference to the file generated by the task so that it's always generated.
			inputs.file(initScriptTestMetadata.map { it.output })
				.withPathSensitivity(PathSensitivity.RELATIVE)
				.normalizeLineEndings()

			doFirst {
				val path = initScriptTestMetadata.get().output.get().asFile.absolutePath
				systemProperty("net.twisterrob.gradle.test.initscript-runtime", path)
			}
		}
	}

	companion object {
		private const val DEFAULT_CONFIGURATION_NAME: String = "initscriptRuntimeClasspath"
	}
}
