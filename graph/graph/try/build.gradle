if (!project.hasProperty('fast')) {
	println("Adding an artificial random delay to every task!, use -Pfast to disable.")
	allprojects { p ->
		p.afterEvaluate {
			p.tasks.all { Task task ->
				task.doLast {
					sleep((int)(Math.random() * 500))
				}
			}
		}
	}
}

tasks.register("check")
tasks.register("build").configure { dependsOn(":check") }

def newTask = { String name, Closure action ->
	def t = project.tasks.register(name) {
		doNotTrackState("Only has side effects on build execution.")
		outputs.upToDateWhen { false }
		doLast(action)
	}
	tasks.named("check").configure { dependsOn(t) }
	return t
}
newTask("stopExecTask", {
	throw new StopExecutionException("stop task")
})
newTask("stopActionTask", {
	throw new StopActionException("stop action")
})

newTask("throwTask", {
	//throw new RuntimeException("fail task")
})

newTask("onlyIf", {}).configure {
	onlyIf { false }
}
