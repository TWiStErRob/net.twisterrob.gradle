apply plugin: 'net.twisterrob.graph'

graphSettings {
	dontClose = true
}

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath fileTree(dir: '../build/libs/', include: '*.jar')
		classpath 'org.graphstream:gs-core:1.3' // automatic when published
		classpath(files("p:\\tools\\lang\\java-1.8.0_66-x86-jdk\\jre\\lib\\ext\\jfxrt.jar"))
	}
}

plugins {
	id("com.android.application") version "8.0.2"
}

dependencies {
	implementation(project(":lib"))
}

android {
	namespace = "com.example"
	compileSdk = 33
	defaultConfig {
		minSdk = 21
		targetSdk = 33
	}
}

project.afterEvaluate {
	def newTask = { String name, Closure action ->
		def t = project.task(name)
		// t.doNotTrackState("Only has side effects on build execution.") // TODO Gradle 7
		t.outputs.upToDateWhen { false }
		t.doLast action
		tasks.preBuild.dependsOn t
		return t;
	}
	newTask("stopExecTask", {
		throw new StopExecutionException("stop task")
	})
	newTask("stopActionTask", {
		throw new StopActionException("stop action")
	})

	newTask("throwTask", {
		//throw new RuntimeException("fail task")
	})

	newTask("onlyIf", {}).onlyIf { false }
}

if (!project.hasProperty('fast')) {
	allprojects { p ->
		p.afterEvaluate {
			p.tasks.all { Task task ->
				task.doLast {
					sleep((int)(Math.random() * 500))
				}
			}
		}
	}
}
